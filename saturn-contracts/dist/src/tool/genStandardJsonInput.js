"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.genstandardjsoninput = void 0;
const cmd_ts_1 = require("cmd-ts");
const config_1 = require("./config");
const options_1 = require("./options");
const fs = __importStar(require("fs"));
exports.genstandardjsoninput = (0, cmd_ts_1.command)({
    name: "gen-stanadard-json-input",
    args: {
        instance: (0, options_1.instance)(),
        jsonArtifact: (0, cmd_ts_1.positional)({
            type: cmd_ts_1.string,
            displayName: "json-artifact",
            description: "JSON file generated by Hardhat in artifacts/build-info directory.",
        }),
        standardJsonInput: (0, cmd_ts_1.option)({
            type: cmd_ts_1.string,
            long: "standard-json-input-file",
            short: "s",
            description: "File to write standard json input to",
            defaultValue: () => "standard-input.json",
        }),
    },
    description: "Generate JSON json file for saturn contract instance",
    handler: async function ({ instance, jsonArtifact, standardJsonInput, }) {
        const saturnInstance = (0, config_1.loadInstance)(instance);
        const poseidonAddress = saturnInstance.poseidon;
        const inputJson = JSON.parse(fs.readFileSync(jsonArtifact, "ascii"))["input"];
        const libraryObj = {
            libraries: {
                "contracts/Poseidon.sol": {
                    Poseidon: poseidonAddress,
                },
            },
        };
        const settingsJson = Object.assign(inputJson["settings"], libraryObj);
        inputJson["settings"] = settingsJson;
        fs.writeFileSync(standardJsonInput, JSON.stringify(inputJson));
    },
});
//# sourceMappingURL=genStandardJsonInput.js.map