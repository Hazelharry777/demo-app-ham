"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ISaturnVerifier__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "proofId",
                type: "bytes32",
            },
        ],
        name: "ProofVerified",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "circuitId",
                type: "uint256",
            },
            {
                components: [
                    {
                        internalType: "uint256[2]",
                        name: "pA",
                        type: "uint256[2]",
                    },
                    {
                        internalType: "uint256[2][2]",
                        name: "pB",
                        type: "uint256[2][2]",
                    },
                    {
                        internalType: "uint256[2]",
                        name: "pC",
                        type: "uint256[2]",
                    },
                ],
                internalType: "struct Proof",
                name: "proof",
                type: "tuple",
            },
            {
                internalType: "uint256[]",
                name: "publicInputs",
                type: "uint256[]",
            },
        ],
        name: "challenge",
        outputs: [
            {
                internalType: "bool",
                name: "challengeSuccessful",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "circuitId",
                type: "uint256",
            },
            {
                internalType: "uint256[]",
                name: "publicInputs",
                type: "uint256[]",
            },
        ],
        name: "isVerified",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "circuitId",
                type: "uint256",
            },
            {
                internalType: "uint256[]",
                name: "publicInputs",
                type: "uint256[]",
            },
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "submissionId",
                        type: "bytes32",
                    },
                    {
                        internalType: "bytes32[]",
                        name: "merkleProof",
                        type: "bytes32[]",
                    },
                    {
                        internalType: "uint16",
                        name: "location",
                        type: "uint16",
                    },
                ],
                internalType: "struct ProofReference",
                name: "proofReference",
                type: "tuple",
            },
        ],
        name: "isVerified",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "nextSubmissionIdxToVerify",
        outputs: [
            {
                internalType: "uint64",
                name: "",
                type: "uint64",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "proofReceiverContract",
        outputs: [
            {
                internalType: "contract ISaturnProofReceiver",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
class ISaturnVerifier__factory {
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.ISaturnVerifier__factory = ISaturnVerifier__factory;
ISaturnVerifier__factory.abi = _abi;
//# sourceMappingURL=ISaturnVerifier__factory.js.map