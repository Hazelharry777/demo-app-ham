import { ContractFactory, ContractTransactionResponse } from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { MerkleTest, MerkleTestInterface } from "../MerkleTest";
type MerkleTestConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class MerkleTest__factory extends ContractFactory {
    constructor(...args: MerkleTestConstructorParams);
    getDeployTransaction(overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<ContractDeployTransaction>;
    deploy(overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<MerkleTest & {
        deploymentTransaction(): ContractTransactionResponse;
    }>;
    connect(runner: ContractRunner | null): MerkleTest__factory;
    static readonly bytecode = "0x60808060405234610016576109ca908161001c8239f35b600080fdfe60806040526004361015610013575b600080fd5b6000803560e01c908163076688c71461007a575080632b8b906c146100715780632bff457414610068578063412f9cac1461005f57635b305c0f1461005757600080fd5b61000e61046e565b5061000e610444565b5061000e61032c565b5061000e6101c1565b346100d25760203660031901126100d2576100936100d5565b906001918261ffff8092165b80838616106100b65760208460ff60405191168152f35b9091926100c561fffe91610982565b94831b169392919061009f565b80fd5b6004359061ffff8216820361000e57565b6064359061ffff8216820361000e57565b50634e487b7160e01b600052604160045260246000fd5b6040519190601f01601f191682016001600160401b0381118382101761013357604052565b61013b6100f7565b604052565b6020906001600160401b038111610159575b60051b0190565b6101616100f7565b610152565b9080601f8301121561000e5781359061018661018183610140565b61010e565b9182938184526020808095019260051b82010192831161000e578301905b8282106101b2575050505090565b813581529083019083016101a4565b503461000e57602036600319011261000e576004356001600160401b03811161000e576101f2903690600401610166565b805161ffff1661ffff90610212828261020a816106ca565b161615610936565b81811690600190818311156102bb57811c617fff1691610231836105bf565b9460009182845b610247575b5050505050610212565b8681979495969716828110156102b1579061028c6102686102a79386610697565b5161028561027f61027885610596565b61ffff1690565b87610697565b519061050a565b6102a1866102998961066d565b98168b610697565b52610579565b8594939695610238565b508396955061023d565b6102d86102c786610681565b516040519081529081906020820190565b0390f35b6044359060ff8216820361000e57565b6024359060ff8216820361000e57565b9181601f8401121561000e578235916001600160401b03831161000e576020808501948460051b01011161000e57565b503461000e5760a036600319011261000e576103466102dc565b61034e6100e6565b6084356001600160401b03811161000e5761036d9036906004016102fc565b602435939260ff9290918385168103610408576000959495925b84871661039d5760405160043587148152602090f35b617fff6103e29160019795969795868216156000146103eb576103d7906103d08a6103c78b610982565b9a168789610655565b359061050a565b955b1c16939661055b565b95949392610387565b610402906103fc8a6103c78b610982565b3561050a565b956103d9565b60405162461bcd60e51b81526020600482015260146024820152730d2dcecc2d8d2c840e0e4dedecc40d8cadccee8d60631b6044820152606490fd5b503461000e57604036600319011261000e57602061046660243560043561050a565b604051908152f35b503461000e57608036600319011261000e5760043560ff8116810361000e576104956102ec565b906001600160401b0360443581811161000e576104b6903690600401610166565b9260643591821161000e576102d8936104e3936104d960ff9436906004016102fc565b949093169061073e565b6040519081529081906020820190565b50634e487b7160e01b600052603260045260246000fd5b6040918251918383018381106001600160401b03821117610537575b845283368437825260208201522090565b61053f6100f7565b610526565b50634e487b7160e01b600052601160045260246000fd5b60ff16801561056c575b6000190190565b610574610544565b610565565b90600261ffff8093160191821161058c57565b610594610544565b565b90600161ffff8093160191821161058c57565b91909161ffff8080941691160191821161058c57565b906105cc61018183610140565b82815280926105dd601f1991610140565b0190602036910137565b156105ee57565b60405162461bcd60e51b815260206004820152601b60248201527f696e74657276616c50726f6f6620746f6f2073686f72742028312900000000006044820152606490fd5b60019063ffffffff809116908114610649570190565b610651610544565b0190565b91908110156106655760051b0190565b6101616104f3565b60019061ffff809116908114610649570190565b60209080511561068f570190565b6106516104f3565b60209181518110156106ac575b60051b010190565b6106b46104f3565b6106a4565b61ffff16801561056c576000190190565b61ffff908116600019019190821161058c57565b61ffff908116600119019190821161058c57565b156106f957565b60405162461bcd60e51b815260206004820152601b60248201527f696e74657276616c50726f6f6620746f6f2073686f72742028322900000000006044820152606490fd5b9193906000905b60ff841661075f57505050505061075b90610681565b5190565b855161ffff1695600196878316906107a461079f61027861079561078386866105a9565b8d61078e878b6105a9565b16906105a9565b60011c617fff1690565b6105bf565b926000908a83818496146108dd575b50889392918b828a935b61085a575b916107ee9997959391617fff9997959361ffff809616146107f4575b50505050505050971c169361055b565b92610745565b61084d9561083b9461083361082b6103d0958963ffffffff9461081a87878c16106106f2565b6108238161066d565b501690610697565b51959e610633565b9d1691610655565b926108458161066d565b501683610697565b523886818088818d6107de565b9550509192905061ffff89898d8784861611156108d05750505090816108bc6108aa6108946108c29561088c8961066d565b981687610697565b51610285846108a28a61066d565b991688610697565b916108b48961066d565b981689610697565b526106de565b92889392918b828a936107bd565b91969093959492506107c2565b94509250905061090a63ffffffff6108f889828a16106105e7565b61090188610633565b9716888b610655565b359061092f61091d849361028584610681565b94849561092988610681565b526106b9565b92386107b3565b1561093d57565b60405162461bcd60e51b815260206004820152601f60248201527f4e504f54206c65617665732028636f6d707574654d65726b6c65526f6f7429006044820152606490fd5b60ff6001911660ff811461064957019056fea2646970667358221220b725b7199ab2686138f278dbcb8c53cef20f54663e0c47a18d6fb380e2eee67464736f6c63430008110033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "uint8";
            readonly name: "depth";
            readonly type: "uint8";
        }, {
            readonly internalType: "uint8";
            readonly name: "offset";
            readonly type: "uint8";
        }, {
            readonly internalType: "bytes32[]";
            readonly name: "interval";
            readonly type: "bytes32[]";
        }, {
            readonly internalType: "bytes32[]";
            readonly name: "intervalProof";
            readonly type: "bytes32[]";
        }];
        readonly name: "computeMerkleIntervalRoot";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32[]";
            readonly name: "leaves";
            readonly type: "bytes32[]";
        }];
        readonly name: "computeMerkleRoot";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "left";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "right";
            readonly type: "bytes32";
        }];
        readonly name: "hash";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "digest";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "numEntries";
            readonly type: "uint16";
        }];
        readonly name: "merkleDepth";
        readonly outputs: readonly [{
            readonly internalType: "uint8";
            readonly name: "";
            readonly type: "uint8";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "root";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "value";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint8";
            readonly name: "depth";
            readonly type: "uint8";
        }, {
            readonly internalType: "uint16";
            readonly name: "location";
            readonly type: "uint16";
        }, {
            readonly internalType: "bytes32[]";
            readonly name: "proof";
            readonly type: "bytes32[]";
        }];
        readonly name: "verifyMerkleProof";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }];
    static createInterface(): MerkleTestInterface;
    static connect(address: string, runner?: ContractRunner | null): MerkleTest;
}
export {};
