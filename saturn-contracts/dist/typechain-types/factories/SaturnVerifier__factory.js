"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SaturnVerifier__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "_owner",
                type: "address",
            },
            {
                internalType: "address",
                name: "_worker",
                type: "address",
            },
            {
                internalType: "contract SaturnProofReceiver",
                name: "_proofReceiver",
                type: "address",
            },
            {
                internalType: "address",
                name: "_outerVerifier",
                type: "address",
            },
            {
                internalType: "address",
                name: "_groth16Verifier",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "proofId",
                type: "bytes32",
            },
        ],
        name: "ProofVerified",
        type: "event",
    },
    {
        inputs: [],
        name: "allocateAggregatorFee",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "circuitId",
                type: "uint256",
            },
            {
                components: [
                    {
                        internalType: "uint256[2]",
                        name: "pA",
                        type: "uint256[2]",
                    },
                    {
                        internalType: "uint256[2][2]",
                        name: "pB",
                        type: "uint256[2][2]",
                    },
                    {
                        internalType: "uint256[2]",
                        name: "pC",
                        type: "uint256[2]",
                    },
                ],
                internalType: "struct Proof",
                name: "proof",
                type: "tuple",
            },
            {
                internalType: "uint256[]",
                name: "publicInputs",
                type: "uint256[]",
            },
        ],
        name: "challenge",
        outputs: [
            {
                internalType: "bool",
                name: "challengeSuccessful",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "claimAggregatorFee",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "feeModel",
        outputs: [
            {
                internalType: "contract ISaturnFeeModel",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint64",
                name: "submissionIdx",
                type: "uint64",
            },
        ],
        name: "getNumVerifiedForSubmissionIdx",
        outputs: [
            {
                internalType: "uint16",
                name: "",
                type: "uint16",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "groth16Verifier",
        outputs: [
            {
                internalType: "contract IGroth16Verifier",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "circuitId",
                type: "uint256",
            },
            {
                internalType: "uint256[]",
                name: "publicInputs",
                type: "uint256[]",
            },
        ],
        name: "isVerified",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "circuitId",
                type: "uint256",
            },
            {
                internalType: "uint256[]",
                name: "publicInputs",
                type: "uint256[]",
            },
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "submissionId",
                        type: "bytes32",
                    },
                    {
                        internalType: "bytes32[]",
                        name: "merkleProof",
                        type: "bytes32[]",
                    },
                    {
                        internalType: "uint16",
                        name: "location",
                        type: "uint16",
                    },
                ],
                internalType: "struct ProofReference",
                name: "proofReference",
                type: "tuple",
            },
        ],
        name: "isVerified",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "lastVerifiedSubmissionHeight",
        outputs: [
            {
                internalType: "uint64",
                name: "",
                type: "uint64",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "nextSubmissionIdxToVerify",
        outputs: [
            {
                internalType: "uint64",
                name: "",
                type: "uint64",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "outerVerifier",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "proofReceiver",
        outputs: [
            {
                internalType: "contract SaturnProofReceiver",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "proofReceiverContract",
        outputs: [
            {
                internalType: "contract ISaturnProofReceiver",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_feeModel",
                type: "address",
            },
        ],
        name: "setFeeModel",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_worker",
                type: "address",
            },
        ],
        name: "setWorker",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "proof",
                type: "bytes",
            },
            {
                internalType: "bytes32[]",
                name: "proofIds",
                type: "bytes32[]",
            },
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "submissionId",
                        type: "bytes32",
                    },
                    {
                        internalType: "bytes32[]",
                        name: "proof",
                        type: "bytes32[]",
                    },
                ],
                internalType: "struct SubmissionProof[]",
                name: "submissionProofs",
                type: "tuple[]",
            },
        ],
        name: "verifyAggregatedProof",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32[]",
                name: "proofIDs",
                type: "bytes32[]",
            },
            {
                internalType: "bytes",
                name: "proof",
                type: "bytes",
            },
        ],
        name: "verifyProofForIDs",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "worker",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x60803462000102576001600160401b0390601f6200258d38819003918201601f191683019184831184841017620001075780849260a09460405283398101031262000102576200004f816200011d565b906200005e602082016200011d565b91604082015160018060a01b039283821680920362000102578391826200009660806200008e606086016200011d565b94016200011d565b968160018060a01b031996168660005416176000551684600154161760015583600254161760025516906004541617600455600160a01b911663ffffffff60e01b600554161717600555431660018060401b0319600654161760065560405161245a9081620001338239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b0382168203620001025756fe60806040526004361015610013575b600080fd5b60003560e01c80630fdb8dca1461018657806319c813be1461017d5780631e00b6b6146101745780631e035f371461016b5780634d547ada146101625780634deda90014610159578063650b3ca1146101505780636a872ed9146101475780638da5cb5b1461013e57806397ee1144146101355780639fabac471461011a578063a5a9504e1461012c578063ad9b484d14610123578063addef8ae1461011a578063c26f6d4414610111578063c68ed32b14610108578063d6ae6a90146100ff578063d6af8da4146100f65763d87366ad146100ee57600080fd5b61000e610bf7565b5061000e610bcc565b5061000e610ba2565b5061000e610b1e565b5061000e610adf565b5061000e6105db565b5061000e610666565b5061000e610627565b5061000e6105b1565b5061000e610587565b5061000e610520565b5061000e6104c8565b5061000e6103c9565b5061000e61036f565b5061000e610347565b5061000e610313565b5061000e6102d8565b5061000e61019a565b600091031261000e57565b503461000e576000806003193601126102d5576002546101fd906004906020906101d4906001600160a01b03165b6001600160a01b031690565b60405163fb8bb1f760e01b815292839182905afa9081156102c8575b839161029a575b50611b9b565b6003548290610214906001600160a01b03166101c8565b6001546001600160a01b03169290803b1561029657604051630f58b8a760e01b81526001600160a01b0390941660048501526001600160401b0390911660248401528290818381604481015b03925af18015610289575b610273575080f35b8061028061028692610ed6565b8061018f565b80f35b610291610f75565b61026b565b8280fd5b6102bb915060203d81116102c1575b6102b38183610f2c565b810190611701565b386101f7565b503d6102a9565b6102d0610f75565b6101f0565b80fd5b503461000e57600036600319011261000e576005546040516001600160a01b039091168152602090f35b6001600160401b0381160361000e57565b503461000e57602036600319011261000e57602061033b60043561033681610302565b6121dd565b61ffff60405191168152f35b503461000e57600036600319011261000e5760206001600160401b0360065416604051908152f35b503461000e57600036600319011261000e576001546040516001600160a01b039091168152602090f35b9181601f8401121561000e578235916001600160401b03831161000e576020808501948460051b01011161000e57565b503461000e57604036600319011261000e576024356001600160401b03811161000e5761ffff61045761043d602061041361040a6001963690600401610399565b90600435611759565b858060a01b0360025416604051808095819463d3b3a1a960e01b8352600483019190602083019252565b03915afa90811561048e575b600091610470575b506121dd565b1661046460028210611716565b60405191148152602090f35b610488915060203d81116102c1576102b38183610f2c565b38610451565b610496610f75565b610449565b9181601f8401121561000e578235916001600160401b03831161000e576020838186019501011161000e57565b503461000e57604036600319011261000e576001600160401b0360043581811161000e576104fa903690600401610399565b9060243592831161000e5761051661051e93369060040161049b565b9290916120f4565b005b503461000e5760031960603682011261000e576001600160401b0360243581811161000e57610553903690600401610399565b9260443592831161000e57606090833603011261000e5760209261057d9260040191600435611885565b6040519015158152f35b503461000e57600036600319011261000e576000546040516001600160a01b039091168152602090f35b503461000e57600036600319011261000e576003546040516001600160a01b039091168152602090f35b503461000e57600036600319011261000e576002546040516001600160a01b039091168152602090f35b602090600319011261000e576004356001600160a01b038116810361000e5790565b503461000e5761063636610605565b6000546001600160a01b0391906106509083163314611fd9565b1660018060a01b03196003541617600355600080f35b503461000e57606036600319011261000e576004356001600160401b03811161000e5761069790369060040161049b565b6024356001600160401b03811161000e576106b6903690600401610399565b6044939193356001600160401b03811161000e576106d8903690600401610399565b60018054909692906001600160a01b03163303610aad57956106fe620100008510610e4a565b600554819060a01c6001600160401b0316926107226006546001600160401b031690565b9860009182945b610787575b505050505061051e9561076661078292600554906001600160401b0360a01b9060a01b16906001600160401b0360a01b191617600555565b6001600160401b03166001600160401b03196006541617600655565b6120f4565b90929491939961ffff85169061ffff8916821015610aa357506107ab908888610ea1565b600254903594906107c4906001600160a01b03166101c8565b604080516305160b7760e11b815260048101889052919691948d9180876024818c5afa988915610a96575b600097889a610a61575b506001600160401b0388169384156108ab5750505050916108969161084761089c946108406108346005546001600160401b039060a01c1690565b6001600160401b031690565b111561108b565b61086361085d610856886121dd565b61ffff1690565b156111ef565b61086c86612386565b7f543093db8d78fd8619586d3a0be12a5736836393feede0888f262888c81ce4c3600080a2610fe0565b926111d7565b93945b9290839a94959a610729565b6108de939a5061ffff929698506108d5919550608094506108cf8884831610610f82565b9f610fe0565b9e168588611000565b925163cccb79e560e01b81528335600482015291829060249082905afa918215610a54575b8989600094859986958792610a05575b50906109366001600160401b038a959493166001600160401b038916101561108b565b61093f876121dd565b809561094b82896110e4565b6109598761ffff88166110e4565b61ffff811661ffff8316106000146109f957509a8b9586925b61098161ffff851615156110f8565b61098b8486611144565b9a61ffff1661ffff819c1611156109a19061115a565b6109ae60208201826111a2565b92909135976109bc98611309565b6109c591611144565b946109cf91611144565b6109d981846122c0565b61ffff16036109f3576109eb906111d7565b935b9461089f565b936109ed565b90509a8b958692610972565b6109369b506001600160401b039750610a3c919650899493925060803d608011610a4d575b610a348183610f2c565b81019061104a565b919c92985096939450919290610913565b503d610a2a565b610a5c610f75565b610903565b90995081610a859298503d8911610a8f575b610a7d8183610f2c565b810190610f4d565b96909698386107f9565b503d610a73565b610a9e610f75565b6107ef565b9a5082955061072e565b60405162461bcd60e51b815260206004820152600a60248201526937b7363cabb7b935b2b960b11b6044820152606490fd5b503461000e57610aee36610605565b6000546001600160a01b039190610b089083163314611fd9565b1660018060a01b03196001541617600155600080f35b503461000e576000806003193601126102d5576003546001546005546001600160a01b039182169284921690610b5f9060a01c6001600160401b0316611b9b565b90803b1561029657604051635611757360e01b81526001600160a01b0390941660048501526001600160401b039091166024840152829081838160448101610260565b503461000e57600036600319011261000e576004546040516001600160a01b039091168152602090f35b503461000e57600036600319011261000e5760206001600160401b0360055460a01c16604051908152f35b503461000e5761014036600319011261000e5760043561010036602319011261000e57610124356001600160401b039182821161000e57610c3f610c83923690600401610399565b91610c4b838383611759565b60025460a090610c63906001600160a01b03166101c8565b9160405180978192631d5b74e960e21b8352600483019190602083019252565b0381845afa948515610e3d575b600095610e0d575b5061ffff94856060820151610cae9061ffff1690565b16600114610cbb90611b09565b8051610cc5611f95565b14610ccf90611b4f565b602001516001600160401b03169460055496808860a01c16610cf090611b9b565b610cff91888116911611611bb4565b610d08866121dd565b1615610d1390611bf4565b60405163405ef34760e01b81526004810192909252816024815a93600094fa610d9695610d9194610d6e946020948415610e00575b600094610ddd575b50604051633fb5881960e01b81529586948593849360048501611e69565b03916001600160a01b03165afa908115610dd0575b600091610da2575b50611f4e565b612386565b60405160018152602090f35b610dc3915060203d8111610dc9575b610dbb8183610f2c565b810190611dbc565b38610d8b565b503d610db1565b610dd8610f75565b610d83565b610df991943d8091833e610df18183610f2c565b810190611cc8565b9238610d50565b610e08610f75565b610d48565b610e2f91955060a03d8111610e36575b610e278183610f2c565b810190611a83565b9338610c98565b503d610e1d565b610e45610f75565b610c90565b15610e5157565b60405162461bcd60e51b8152602060048201526011602482015270746f6f206d616e792070726f6f6649647360781b6044820152606490fd5b50634e487b7160e01b600052603260045260246000fd5b9190811015610eb2575b60051b0190565b610eba610e8a565b610eab565b50634e487b7160e01b600052604160045260246000fd5b6001600160401b038111610ee957604052565b610ef1610ebf565b604052565b60a081019081106001600160401b03821117610ee957604052565b604081019081106001600160401b03821117610ee957604052565b90601f801991011681019081106001600160401b03821117610ee957604052565b919082604091031261000e5760208251610f6681610302565b920151610f7281610302565b90565b506040513d6000823e3d90fd5b15610f8957565b60405162461bcd60e51b815260206004820152601860248201527736b4b9b9b4b7339039bab136b4b9b9b4b7b710383937b7b360411b6044820152606490fd5b50634e487b7160e01b600052601160045260246000fd5b60019061ffff809116908114610ff4570190565b610ffc610fc9565b0190565b9190811015611023575b60051b81013590603e198136030182121561000e570190565b61102b610e8a565b61100a565b61ffff81160361000e57565b519060ff8216820361000e57565b919082608091031261000e57815161106181610302565b91602081015161107081610302565b91610f726060604084015161108481611030565b930161103c565b1561109257565b60405162461bcd60e51b815260206004820152600c60248201526b37baba1037b31037b93232b960a11b6044820152606490fd5b61ffff90811660011901919082116110da57565b6110e2610fc9565b565b61ffff91821690821603919082116110da57565b156110ff57565b60405162461bcd60e51b815260206004820152601c60248201527f617373657274286e6f207375626d697373696f6e2070726f6f667329000000006044820152606490fd5b91909161ffff808094169116019182116110da57565b1561116157565b60405162461bcd60e51b8152602060048201526019602482015278617373657274287375626d697373696f6e2070726f6f66732960381b6044820152606490fd5b903590601e198136030182121561000e57018035906001600160401b03821161000e57602001918160051b3603831361000e57565b9060016001600160401b03809316019182116110da57565b156111f657565b60405162461bcd60e51b81526020600482015260166024820152751c1c9bdbd988185b1c9958591e481d995c9a599a595960521b6044820152606490fd5b6020906001600160401b03811161124c5760051b0190565b610eba610ebf565b9061125e82611234565b61126b6040519182610f2c565b828152809261127c601f1991611234565b0190602036910137565b602090805115611294570190565b610ffc610e8a565b60209181518110156112b1575b60051b010190565b6112b9610e8a565b6112a9565b156112c557565b606460405162461bcd60e51b815260206004820152602060248201527f6d65726b6c6520696e74657276616c2070726f6f6620697320696e76616c69646044820152fd5b91959790989396929661131f61ffff8a16611254565b9760005b61ffff8b1661ffff821610156113905761138b906113508d8b61ffff6113488d610fe0565b9c1691610ea1565b35807f543093db8d78fd8619586d3a0be12a5736836393feede0888f262888c81ce4c3600080a261138561ffff83168d61129c565b52610fe0565b611323565b50949950945094509490956113a59087611144565b61ffff600160ff87161b9116116113c9576110e2956113c3946114dd565b146112be565b60405162461bcd60e51b815260206004820152600f60248201526e746f6f206d616e792070726f6f667360881b6044820152606490fd5b60ff168015611411575b6000190190565b611419610fc9565b61140a565b1561142557565b60405162461bcd60e51b815260206004820152601b60248201527f696e74657276616c50726f6f6620746f6f2073686f72742028312900000000006044820152606490fd5b60019063ffffffff809116908114610ff4570190565b61ffff168015611411576000190190565b1561149857565b60405162461bcd60e51b815260206004820152601b60248201527f696e74657276616c50726f6f6620746f6f2073686f72742028322900000000006044820152606490fd5b9193906000905b60ff84166114fe5750505050506114fa90611286565b5190565b855161ffff16956001968783169061154361153e6108566115346115228686611144565b8d61152d878b611144565b1690611144565b60011c617fff1690565b611254565b926000908a838184961461168a575b50889392918b828a935b611600575b9161158d9997959391617fff9997959361ffff80961614611593575b50505050505050971c1693611400565b926114e4565b6115f3956115e1946115d26115ca6115da958963ffffffff946115b987878c1610611491565b6115c281610fe0565b50169061129c565b51959e61146a565b9d1691610ea1565b35906116e3565b926115eb81610fe0565b50168361129c565b523886818088818d61157d565b9550509192905061ffff89898d87848616111561167d57505050908161166961165761163a61166f9561163289610fe0565b98168761129c565b51611650846116488a610fe0565b99168861129c565b51906116e3565b9161166189610fe0565b98168961129c565b526110c6565b92889392918b828a9361155c565b9196909395949250611561565b9450925090506116b763ffffffff6116a589828a161061141e565b6116ae8861146a565b9716888b610ea1565b35906116dc6116ca849361165084611286565b9484956116d688611286565b52611480565b9238611552565b6040918251916116f283610f11565b83368437825260208201522090565b9081602091031261000e5751610f7281610302565b1561171d57565b60405162461bcd60e51b81526020600482015260146024820152731a5b9d985b1a59081b9d5b481d995c9a599a595960621b6044820152606490fd5b9160409060209260018201918281116117bf575b61178e61177984611234565b9361178686519586610f2c565b808552611234565b8386019690601f19013688378351156117b2575b865260051b928392013701902090565b6117ba610e8a565b6117a2565b6117c7610fc9565b61176d565b9081606091031261000e5780516117e281610302565b91610f726040602084015161108481611030565b156117fd57565b60405162461bcd60e51b815260206004820152601260248201527137379039bab1b41039bab136b4b9b9b4b7b760711b6044820152606490fd5b35610f7281611030565b1561184857565b60405162461bcd60e51b81526020600482015260156024820152746c6f636174696f6e206f7574206f662072616e676560581b6044820152606490fd5b6002549093919291906118a0906001600160a01b03166101c8565b92813592606060405180966332bde3f160e21b825281806118c989600483019190602083019252565b03915afa91821561199e575b60009586908794611967575b506118f66001600160401b03881615156117f6565b611919604086019761033661190a8a611837565b61ffff80809616911610611841565b908061192489611837565b92169116101561195b576119426119539261194892610f7299611759565b95611837565b9260208101906111a2565b9490936119bd565b50505050505050600090565b9196505061198d91925060603d8111611997575b6119858183610f2c565b8101906117cc565b92919590386118e1565b503d61197b565b6119a6610f75565b6118d5565b60ff6001911660ff8114610ff4570190565b949192909360ff928385168103611a47576000925b8486166119e3575050505050501490565b617fff611a2291600198959697989586821615600014611a2a57611a17906115da8a611a0e8b6119ab565b9a168789610ea1565b955b1c169396611400565b9493926119d2565b611a4190611a3b8a611a0e8b6119ab565b356116e3565b95611a19565b60405162461bcd60e51b81526020600482015260146024820152730d2dcecc2d8d2c840e0e4dedecc40d8cadccee8d60631b6044820152606490fd5b908160a091031261000e57611af460806040519260a084018481106001600160401b03821117611afc575b604052805184526020810151611ac381610302565b60208501526040810151611ad681610302565b60408501526060810151611ae981611030565b60608501520161103c565b608082015290565b611b04610ebf565b611aae565b15611b1057565b60405162461bcd60e51b81526020600482015260176024820152766d756c74692d70726f6f6620286368616c6c656e67652960481b6044820152606490fd5b15611b5657565b60405162461bcd60e51b815260206004820152601b60248201527f50726f6f662064696765737420646f6573206e6f74206d6174636800000000006044820152606490fd5b6001600160401b0390811660001901919082116110da57565b15611bbb57565b60405162461bcd60e51b8152602060048201526011602482015270141c9bdbd9881b9bdd081cdada5c1c1959607a1b6044820152606490fd5b15611bfb57565b60405162461bcd60e51b815260206004820152600e60248201526d141c9bdbd9881d995c9a599a595960921b6044820152606490fd5b9080601f8301121561000e5760405191611c4a83610f11565b82906040810192831161000e57905b828210611c665750505090565b8151815260209182019101611c59565b81601f8201121561000e57604090815192611c9084610f11565b8390608083019281841161000e57915b838310611caf57505050505090565b60208591611cbd8486611c31565b815201920191611ca0565b90602091828183031261000e5780516001600160401b039182821161000e5701926101e08484031261000e57604091825194611d0386610ef6565b611d0d8582611c31565b8652611d1b85858301611c76565b83870152611d2c8560c08301611c76565b84870152611d3e856101408301611c76565b60608701526101c081015191821161000e57019083601f8301121561000e578151611d6881611234565b94611d7585519687610f2c565b818652828087019260061b8501019381851161000e578301915b848310611da457505050505050608082015290565b838691611db18486611c31565b815201920191611d8f565b9081602091031261000e5751801515810361000e5790565b604090816024823760646000838381015b60028310611dfa575050505060c060e4910137565b908082818660019537019301910190918490611de5565b6000915b60028310611e2257505050565b600190825181526020809101920192019190611e15565b906000905b60028210611e4b57505050565b6020604082611e5d6001948751611e11565b01930191019091611e3e565b929091611e7584611dd4565b610140610100850181905284018190526001600160fb1b03811161000e5760059291921b8061016092838601378301926101208282860301910152611ec261034084019184018351611e11565b6020611ed6818401516101a0860190611e39565b806103606080604095611ef1878201516102208a0190611e39565b611f0460608201516102a08a0190611e39565b0151956101e06103208201528651809552019401926000905b838210611f2c57505050505090565b9091929394838282611f416001948a51611e11565b0196019493920190611f1d565b15611f5557565b60405162461bcd60e51b815260206004820152601860248201527710da185b1b195b99d9481b9bdd081cdd58d8d95cdcd99d5b60421b6044820152606490fd5b6040516020810190611fa682611dd4565b610100815261012081018181106001600160401b03821117611fcc575b60405251902090565b611fd4610ebf565b611fc3565b15611fe057565b60405162461bcd60e51b815260206004820152600960248201526837b7363ca7bbb732b960b91b6044820152606490fd5b1561201857565b60405162461bcd60e51b815260206004820152601f60248201527f66696e616c206469676573742028682920646f6573206e6f74206d61746368006044820152606490fd5b908092918237016000815290565b3d156120b3573d906001600160401b0382116120a6575b6040519161209a601f8201601f191660200184610f2c565b82523d6000602084013e565b6120ae610ebf565b612082565b606090565b156120bf57565b60405162461bcd60e51b815260206004820152600d60248201526c34b73b30b634b210383937b7b360991b6044820152606490fd5b60209193929361210381611254565b9060051b92839101918237206001600160801b0381166101808401350361216f576110e29260009261213f849360801c6101a084013514612011565b60045483906001600160a01b03169261215d6040518094819361205d565b03925af161216961206b565b506120b8565b60405162461bcd60e51b815260206004820152601f60248201527f66696e616c2064696765737420286c2920646f6573206e6f74206d61746368006044820152606490fd5b6007548110156121d0575b600760005260206000200190600090565b6121d8610e8a565b6121bf565b670fffffffffffffff8160041c16906007548210806000146122295761ffff9260f0911561221c575b6007600052602060002001549160041b161c1690565b612224610e8a565b612206565b505050600090565b6001600160801b03908116600101919082116110da57565b1561225057565b60405162461bcd60e51b815260206004820152600d60248201526c0eccac6e8dee440d8cadccee8d609b1b6044820152606490fd5b1561228c57565b60405162461bcd60e51b815260206004820152600c60248201526b766563746f7220656e74727960a01b6044820152606490fd5b9060f0670fffffffffffffff8360041c169260041b1661ffff809216811b91600754841060001461233357916123189161231085946123016110e2976121b4565b9190931b1992549060031b1c90565b1617916121b4565b90919082549060031b600019811b9283911b16911916179055565b50506123806123768360016110e29501600755600760005283816020600020015561237160075460018060801b0361236a84612231565b1614612249565b6121b4565b90549060031b1c90565b14612285565b60f0670fffffffffffffff8260041c169160041b166001811b9060075483106000146123c45782916123189161231061ffff6123016110e2976121b4565b5060018201600790815560008190527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6888301829055546110e29261241791612371906001600160801b0361236a84612231565b90549060031b1c1461228556fea2646970667358221220ecf2df1ecd39e3ddf7d1056c01d40a59c6b9db8e59b4a69ea933cbd0806dfd3564736f6c63430008110033";
const isSuperArgs = (xs) => xs.length > 1;
class SaturnVerifier__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(_owner, _worker, _proofReceiver, _outerVerifier, _groth16Verifier, overrides) {
        return super.getDeployTransaction(_owner, _worker, _proofReceiver, _outerVerifier, _groth16Verifier, overrides || {});
    }
    deploy(_owner, _worker, _proofReceiver, _outerVerifier, _groth16Verifier, overrides) {
        return super.deploy(_owner, _worker, _proofReceiver, _outerVerifier, _groth16Verifier, overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.SaturnVerifier__factory = SaturnVerifier__factory;
SaturnVerifier__factory.bytecode = _bytecode;
SaturnVerifier__factory.abi = _abi;
//# sourceMappingURL=SaturnVerifier__factory.js.map